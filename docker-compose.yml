version: "3"
services:
  php:
    image: ubuntu:focal
    deploy:
      resources:
        limits:
          memory: 512m
          #cpus: 1
    build:
      args:
        user: ${USER}
        uid: ${UID}
        home: ${HOME}
      context: ./php
      dockerfile: ./Dockerfile
    container_name: php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ${APP_DIR}:/var/www
      - ${TMP_DIR}:/tmp
      - ${HOME}:${HOME}/
      - ./.bashrc_docker:${HOME}/.bashrc_docker
    networks:
      - intranet

  php8:
    deploy:
      resources:
        limits:
          memory: 2G
          #memory: 512m
          #cpus: 1
    build:
      args:
        user: ${USER}
        uid: ${UID}
        home: ${HOME}
      context: ./php8
      dockerfile: ./Dockerfile
    container_name: php8
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ${APP_DIR}:/var/www
      - ${TMP_DIR}:/tmp
      - ${HOME}:${HOME}/
      - ./.bashrc_docker:${HOME}/.bashrc_docker
    networks:
      - intranet

  mysql:
    image: mysql:5.7
    deploy:
      resources:
        limits:
          memory: 4096m
          #cpus: 2
    hostname: db.local
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_HOST: "%"
      #MYSQL_DATABASE: ${DB_DATABASE}
      #MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      #SERVICE_TAGS: dev
      #SERVICE_NAME: mysql
    ports:
      - 127.0.0.1:${DB_PORT}:3306
    volumes:
      # file
      - ${DB_CONF_DIR}/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ${DB_CONF_DIR}/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      # directory
      - ${DATA_DIR}/mysql:/var/lib/mysql
      - ${DATA_DIR}/mysql-files:/var/lib/mysql-files
      - ${DATA_DIR}/mysql-files-sample:/var/lib/mysql-files-sample
    networks:
      - intranet
    command: --explicit_defaults_for_timestamp=ON
             --character-set-server=utf8mb4
             --collation-server=utf8mb4_general_ci

  nginx:
    image: nginx:alpine
    deploy:
      resources:
        limits:
          memory: 128m
          #cpus: 1
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_DIR}:/var/www
      - ${LOG_DIR}:/var/log/nginx
      - ./nginx/etc:/etc/nginx/conf.d/
    #command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - intranet

  redis:
    image: redis
    deploy:
      resources:
        limits:
          memory: 64m
          #cpus: 1
    hostname: redis
    container_name: redis
    command: --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - intranet

  meilisearch:
    image: getmeili/meilisearch:latest
    deploy:
      resources:
        limits:
          memory: 1G
    hostname: meilisearch
    container_name: meilisearch
    user: ${UID}:${UID}
    #restart: unless-stopped
    #command: ./meilisearch --master-key=${MEILISEARCH_KEY} --no-analytics
    command: ./meilisearch --no-analytics --http-payload-size-limit=500Mb
    ports:
      - "${MEILISEARCH_PORT}:${MEILISEARCH_PORT}"
    volumes:
      - ${MEILISEARCH_DATA}:/data.ms
    networks:
      - intranet

networks:
  intranet:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
